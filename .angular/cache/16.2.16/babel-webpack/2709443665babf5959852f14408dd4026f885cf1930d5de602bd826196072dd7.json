{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sweet.service\";\nimport * as i2 from \"@angular/forms\";\nexport let AddComponent = /*#__PURE__*/(() => {\n  class AddComponent {\n    constructor(sweetService) {\n      this.sweetService = sweetService;\n      this.newSweet = {\n        id: null,\n        name: '',\n        category: '',\n        price: 0,\n        unit: 'kg',\n        available: true\n      };\n    }\n    ngOnInit() {\n      const editSweet = this.sweetService.getEditSweet();\n      if (editSweet) {\n        this.newSweet = {\n          ...editSweet\n        };\n        this.sweetService.clearEditSweet();\n      }\n    }\n    addSweet() {\n      if (this.newSweet.name && this.newSweet.price > 0 && this.newSweet.category && this.newSweet.unit) {\n        this.sweetService.addOrUpdateSweet({\n          ...this.newSweet\n        });\n        this.newSweet = {\n          id: null,\n          name: '',\n          category: '',\n          price: 0,\n          unit: 'kg',\n          available: true\n        };\n      }\n    }\n    static {\n      this.ɵfac = function AddComponent_Factory(t) {\n        return new (t || AddComponent)(i0.ɵɵdirectiveInject(i1.SweetService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AddComponent,\n        selectors: [[\"app-add\"]],\n        decls: 37,\n        vars: 5,\n        consts: [[1, \"add-container\"], [3, \"ngSubmit\"], [2, \"color\", \"red\", \"vertical-align\", \"middle\"], [\"name\", \"name\", \"placeholder\", \"Sweet Name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"category\", \"placeholder\", \"Category\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"price\", \"type\", \"number\", \"placeholder\", \"Price\", \"required\", \"\", \"min\", \"0\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"unit\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"kg\"], [\"value\", \"piece\"], [1, \"checkbox-inline\"], [\"type\", \"checkbox\", \"name\", \"available\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n        template: function AddComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Add Sweet\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function AddComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.addSweet();\n            });\n            i0.ɵɵelementStart(4, \"label\")(5, \"span\");\n            i0.ɵɵtext(6, \"Sweet Name \");\n            i0.ɵɵelementStart(7, \"span\", 2);\n            i0.ɵɵtext(8, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(9, \"input\", 3);\n            i0.ɵɵlistener(\"ngModelChange\", function AddComponent_Template_input_ngModelChange_9_listener($event) {\n              return ctx.newSweet.name = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(10, \"label\")(11, \"span\");\n            i0.ɵɵtext(12, \"Sweet Category \");\n            i0.ɵɵelementStart(13, \"span\", 2);\n            i0.ɵɵtext(14, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(15, \"input\", 4);\n            i0.ɵɵlistener(\"ngModelChange\", function AddComponent_Template_input_ngModelChange_15_listener($event) {\n              return ctx.newSweet.category = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(16, \"label\")(17, \"span\");\n            i0.ɵɵtext(18, \"Price \");\n            i0.ɵɵelementStart(19, \"span\", 2);\n            i0.ɵɵtext(20, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(21, \"input\", 5);\n            i0.ɵɵlistener(\"ngModelChange\", function AddComponent_Template_input_ngModelChange_21_listener($event) {\n              return ctx.newSweet.price = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(22, \"label\")(23, \"span\");\n            i0.ɵɵtext(24, \"Unit \");\n            i0.ɵɵelementStart(25, \"span\", 2);\n            i0.ɵɵtext(26, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(27, \"select\", 6);\n            i0.ɵɵlistener(\"ngModelChange\", function AddComponent_Template_select_ngModelChange_27_listener($event) {\n              return ctx.newSweet.unit = $event;\n            });\n            i0.ɵɵelementStart(28, \"option\", 7);\n            i0.ɵɵtext(29, \"kg\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(30, \"option\", 8);\n            i0.ɵɵtext(31, \"piece\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(32, \"label\", 9)(33, \"input\", 10);\n            i0.ɵɵlistener(\"ngModelChange\", function AddComponent_Template_input_ngModelChange_33_listener($event) {\n              return ctx.newSweet.available = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(34, \" Available for Sale \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(35, \"button\", 11);\n            i0.ɵɵtext(36, \"Add Sweet\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngModel\", ctx.newSweet.name);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngModel\", ctx.newSweet.category);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngModel\", ctx.newSweet.price);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngModel\", ctx.newSweet.unit);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngModel\", ctx.newSweet.available);\n          }\n        },\n        dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinValidator, i2.NgModel, i2.NgForm],\n        styles: [\".add-container[_ngcontent-%COMP%]{max-width:400px;margin:48px auto;padding:32px 24px;background:linear-gradient(120deg,#f3e7e9 0%,#e3eeff 100%);border-radius:16px;box-shadow:0 4px 24px #673ab71f;border:1px solid #e0e0e0}.add-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:24px;color:#673ab7;font-size:2rem;font-weight:700}.add-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:0}.add-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:flex;flex-direction:column;font-weight:500;color:#333;font-size:1rem;margin-bottom:14px}.add-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .add-container[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:10px 12px;margin-top:6px;border:1px solid #ccc;border-radius:6px;font-size:1rem;background:#f9f9f9;margin-bottom:0;transition:border-color .2s}.add-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus, .add-container[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]:focus{border-color:#673ab7;outline:none}.add-container[_ngcontent-%COMP%]   .checkbox-inline[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;font-weight:500;margin-top:8px;margin-bottom:12px}.add-container[_ngcontent-%COMP%]   .checkbox-inline[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{margin-right:8px;accent-color:#673ab7}.add-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:12px 0;background:linear-gradient(90deg,#673ab7 0%,#512da8 100%);color:#fff;border:none;border-radius:6px;font-size:1.1rem;font-weight:600;cursor:pointer;box-shadow:0 2px 8px #673ab714;transition:background .2s}.add-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:linear-gradient(90deg,#512da8 0%,#673ab7 100%);box-shadow:0 4px 16px #673ab729}\"]\n      });\n    }\n  }\n  return AddComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}